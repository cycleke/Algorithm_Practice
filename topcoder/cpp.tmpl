<<<<<<< HEAD
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <fstream>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <typeinfo>
#include <unordered_map>
#include <unordered_set>
#include <vector>
=======
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <bitset>
#include <string>
#include <set>
#include <stack>
#include <map>
#include <queue>
#include <vector>
#include <unordered_set>
#include <sstream>
#include <typeinfo>
#include <fstream>
>>>>>>> d4b63232712dc6a6f740246c10b7a387e6673bd7

using namespace std;

class ${ClassName} {
<<<<<<< HEAD
public:
  ${Method.ReturnType} ${Method.Name}(${Method.Params});
};

#define EP emplace
#define PB push_back
#define MK make_pair
#define ACCU accumulate
#define MSET(a, b) memset(a, b, sizeof(a))
#define SZ(a) int((a).size())
#define ALL(a) (a).begin(), (a).end()

#define INF 0x3f3f3f3f
#define IINF 0x3f3f3f3f3f3f3f3fll
#define EPS 1e-9
#define PI 3.1415926535897932384626
#define MOD 1000000007

#define REP(i, a) for (auto i : x)
#define REP(i, l, r) for (int i = (l); i < (r); ++i)
#define QREP(i, l, r) for (int i = (l); i <= (r); ++i)
#define PER(i, l, r) for (int i = (r)-1; i >= (l); --i)
#define QPER(i, l, r) for (int i = (r); i >= (l); --i)

typedef long long ll;
typedef vector<int> vi;
typedef vector<pii> vpii;
typedef pair<int, int> pii;

${Method.ReturnType} ${ClassName}::${Method.Name}(${Method.Params}) {
  return ${Method.ReturnType;zeroval};
}
=======
  public:
  ${Method.ReturnType} ${Method.Name}(${Method.Params});
};

${Method.ReturnType} ${ClassName}::${Method.Name}(${Method.Params}) {
  return ${Method.ReturnType;zeroval};
}

${CutBegin}
${<TestCode}
${CutEnd}
>>>>>>> d4b63232712dc6a6f740246c10b7a387e6673bd7
